{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\speak\\\\Desktop\\\\CSMessagingApp\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport AgentLogin from './components/AgentLogin';\nimport UserQueryForm from './components/UserQueryForm';\nimport AgentDashboard from './components/AgentDashboard';\nimport MessageDetails from './components/MessageDetails';\n\n// A simple login check, you could replace it with actual login logic later\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isAgentLoggedIn = false; // Change this to actual login check\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/user\",\n        element: /*#__PURE__*/_jsxDEV(UserQueryForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/agent-login\",\n        element: /*#__PURE__*/_jsxDEV(AgentLogin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/agent-dashboard\",\n        element: isAgentLoggedIn ? /*#__PURE__*/_jsxDEV(AgentDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 38\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/agent-login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/message-details\",\n        element: /*#__PURE__*/_jsxDEV(MessageDetails, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navigate","AgentLogin","UserQueryForm","AgentDashboard","MessageDetails","jsxDEV","_jsxDEV","isAgentLoggedIn","App","children","path","element","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/speak/Desktop/CSMessagingApp/frontend/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport AgentLogin from './components/AgentLogin';\r\nimport UserQueryForm from './components/UserQueryForm';\r\nimport AgentDashboard from './components/AgentDashboard';\r\nimport MessageDetails from './components/MessageDetails';\r\n\r\n// A simple login check, you could replace it with actual login logic later\r\nconst isAgentLoggedIn = false; // Change this to actual login check\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        {/* Redirect the root to /user */}\r\n        <Route path=\"/\" element={<Navigate to=\"/user\" />} />\r\n\r\n        {/* User Query Form Route */}\r\n        <Route path=\"/user\" element={<UserQueryForm />} />\r\n\r\n        {/* Agent Login Route */}\r\n        <Route path=\"/agent-login\" element={<AgentLogin />} />\r\n\r\n        {/* Agent Dashboard - Protected route */}\r\n        <Route\r\n          path=\"/agent-dashboard\"\r\n          element={isAgentLoggedIn ? <AgentDashboard /> : <Navigate to=\"/agent-login\" />}\r\n        />\r\n\r\n        {/* Message Details Route */}\r\n        <Route path=\"/message-details\" element={<MessageDetails />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AACnF,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,cAAc,MAAM,6BAA6B;;AAExD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAG,KAAK,CAAC,CAAC;;AAE/B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACEF,OAAA,CAACT,MAAM;IAAAY,QAAA,eACLH,OAAA,CAACR,MAAM;MAAAW,QAAA,gBAELH,OAAA,CAACP,KAAK;QAACW,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEL,OAAA,CAACN,QAAQ;UAACY,EAAE,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAGpDV,OAAA,CAACP,KAAK;QAACW,IAAI,EAAC,OAAO;QAACC,OAAO,eAAEL,OAAA,CAACJ,aAAa;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAGlDV,OAAA,CAACP,KAAK;QAACW,IAAI,EAAC,cAAc;QAACC,OAAO,eAAEL,OAAA,CAACL,UAAU;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAGtDV,OAAA,CAACP,KAAK;QACJW,IAAI,EAAC,kBAAkB;QACvBC,OAAO,EAAEJ,eAAe,gBAAGD,OAAA,CAACH,cAAc;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGV,OAAA,CAACN,QAAQ;UAACY,EAAE,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChF,CAAC,eAGFV,OAAA,CAACP,KAAK;QAACW,IAAI,EAAC,kBAAkB;QAACC,OAAO,eAAEL,OAAA,CAACF,cAAc;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAACC,EAAA,GAxBIT,GAAG;AA0BT,eAAeA,GAAG;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}