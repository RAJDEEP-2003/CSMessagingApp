{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\speak\\\\Desktop\\\\CSMessagingApp\\\\frontend\\\\src\\\\components\\\\AgentDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/AgentDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AgentDashboard = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [reply, setReply] = useState('');\n  const [selectedMessageId, setSelectedMessageId] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [statusFilter, setStatusFilter] = useState('');\n  useEffect(() => {\n    const fetchMessages = async () => {\n      setLoading(true);\n      try {\n        const queryParam = statusFilter ? `?status=${statusFilter}` : '';\n        const response = await fetch(`http://localhost:5000/api/messages${queryParam}`);\n        const data = await response.json();\n        setMessages(Array.isArray(data) ? data : []);\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n        setMessages([]); // Clear messages on error\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMessages(); // Initial fetch\n  }, [statusFilter]);\n  const handleSearchChange = e => {\n    setSearchQuery(e.target.value);\n  };\n  const handleReplySubmit = async id => {\n    if (!reply.trim()) {\n      alert('Reply cannot be empty.');\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:5000/api/messages/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          reply,\n          status: 'resolved'\n        }) // Update status to \"resolved\"\n      });\n      if (response.ok) {\n        alert('Reply sent successfully!');\n        setReply('');\n        setSelectedMessageId(null);\n\n        // Refetch messages after replying\n        const updatedResponse = await fetch('http://localhost:5000/api/messages');\n        const updatedData = await updatedResponse.json();\n        setMessages(Array.isArray(updatedData) ? updatedData : []);\n      } else {\n        alert('Error replying to the message.');\n      }\n    } catch (error) {\n      console.error('Error sending reply:', error);\n    }\n  };\n  const filteredMessages = messages.filter(message => {\n    const customer = message.customer || '';\n    const text = message.message || '';\n    const timestamp = new Date(message.timestamp).toLocaleString();\n    const lowerCaseQuery = searchQuery.toLowerCase();\n    return customer.toLowerCase().includes(lowerCaseQuery) || text.toLowerCase().includes(lowerCaseQuery) || timestamp.toLowerCase().includes(lowerCaseQuery);\n  });\n\n  // Separate messages based on their status\n  const urgentMessages = messages.filter(message => message.priority === 'urgent');\n  const pendingMessages = messages.filter(message => message.status === 'pending');\n  const resolvedMessages = messages.filter(message => message.status === 'resolved');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Agent Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchQuery,\n        onChange: handleSearchChange,\n        placeholder: \"Search by User ID, Message, or Date/Time\",\n        style: {\n          padding: '10px',\n          width: '300px',\n          marginBottom: '20px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setStatusFilter('pending'),\n        style: {\n          marginRight: '10px'\n        },\n        children: \"Show Pending Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setStatusFilter('resolved'),\n        style: {\n          marginRight: '10px'\n        },\n        children: \"Show Resolved Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setStatusFilter(''),\n        style: {\n          marginRight: '10px'\n        },\n        children: \"Show All Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          marginRight: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Urgent Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading urgent messages...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this) : urgentMessages.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: urgentMessages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              marginBottom: '20px',\n              borderBottom: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"User ID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 22\n              }, this), \" \", message.customer]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Message:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 22\n              }, this), \" \", message.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Timestamp:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 22\n              }, this), \" \", new Date(message.timestamp).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 22\n              }, this), \" \", message.status || 'pending']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this)]\n          }, message._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No urgent messages.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          marginRight: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Pending Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading pending messages...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this) : pendingMessages.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: pendingMessages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              marginBottom: '20px',\n              borderBottom: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"User ID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 22\n              }, this), \" \", message.customer]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Message:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 22\n              }, this), \" \", message.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Timestamp:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 22\n              }, this), \" \", new Date(message.timestamp).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 22\n              }, this), \" \", message.status || 'pending']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this), message.status !== 'resolved' && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSelectedMessageId(message._id),\n              children: \"Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 21\n            }, this), selectedMessageId === message._id && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: reply,\n                onChange: e => setReply(e.target.value),\n                placeholder: \"Type your reply here...\",\n                rows: \"3\",\n                style: {\n                  width: '100%',\n                  marginTop: '10px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleReplySubmit(message._id),\n                style: {\n                  marginTop: '10px'\n                },\n                children: \"Submit Reply\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 21\n            }, this)]\n          }, message._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No pending messages.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Resolved Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading resolved messages...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this) : resolvedMessages.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: resolvedMessages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              marginBottom: '20px',\n              borderBottom: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"User ID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 22\n              }, this), \" \", message.customer]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Message:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 22\n              }, this), \" \", message.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Timestamp:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 22\n              }, this), \" \", new Date(message.timestamp).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 22\n              }, this), \" \", message.status || 'pending']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this)]\n          }, message._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No resolved messages.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(AgentDashboard, \"gFrtplJaIFLpBV6jAYGysXqqJCw=\");\n_c = AgentDashboard;\nexport default AgentDashboard;\nvar _c;\n$RefreshReg$(_c, \"AgentDashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AgentDashboard","_s","messages","setMessages","loading","setLoading","reply","setReply","selectedMessageId","setSelectedMessageId","searchQuery","setSearchQuery","statusFilter","setStatusFilter","fetchMessages","queryParam","response","fetch","data","json","Array","isArray","error","console","handleSearchChange","e","target","value","handleReplySubmit","id","trim","alert","method","headers","body","JSON","stringify","status","ok","updatedResponse","updatedData","filteredMessages","filter","message","customer","text","timestamp","Date","toLocaleString","lowerCaseQuery","toLowerCase","includes","urgentMessages","priority","pendingMessages","resolvedMessages","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","style","padding","width","marginBottom","onClick","marginRight","display","justifyContent","flex","length","map","borderBottom","_id","rows","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/speak/Desktop/CSMessagingApp/frontend/src/components/AgentDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/AgentDashboard.css';\r\n\r\nconst AgentDashboard = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [reply, setReply] = useState('');\r\n  const [selectedMessageId, setSelectedMessageId] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const queryParam = statusFilter ? `?status=${statusFilter}` : '';\r\n        const response = await fetch(`http://localhost:5000/api/messages${queryParam}`);\r\n        const data = await response.json();\r\n        setMessages(Array.isArray(data) ? data : []);\r\n      } catch (error) {\r\n        console.error('Error fetching messages:', error);\r\n        setMessages([]); // Clear messages on error\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMessages();  // Initial fetch\r\n  }, [statusFilter]);\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchQuery(e.target.value);\r\n  };\r\n\r\n  const handleReplySubmit = async (id) => {\r\n    if (!reply.trim()) {\r\n      alert('Reply cannot be empty.');\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/messages/${id}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ reply, status: 'resolved' }), // Update status to \"resolved\"\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert('Reply sent successfully!');\r\n        setReply('');\r\n        setSelectedMessageId(null);\r\n\r\n        // Refetch messages after replying\r\n        const updatedResponse = await fetch('http://localhost:5000/api/messages');\r\n        const updatedData = await updatedResponse.json();\r\n        setMessages(Array.isArray(updatedData) ? updatedData : []);\r\n      } else {\r\n        alert('Error replying to the message.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending reply:', error);\r\n    }\r\n  };\r\n\r\n  const filteredMessages = messages.filter((message) => {\r\n    const customer = message.customer || '';\r\n    const text = message.message || '';\r\n    const timestamp = new Date(message.timestamp).toLocaleString();\r\n    const lowerCaseQuery = searchQuery.toLowerCase();\r\n\r\n    return (\r\n      customer.toLowerCase().includes(lowerCaseQuery) ||\r\n      text.toLowerCase().includes(lowerCaseQuery) ||\r\n      timestamp.toLowerCase().includes(lowerCaseQuery)\r\n    );\r\n  });\r\n\r\n  // Separate messages based on their status\r\n  const urgentMessages = messages.filter((message) => message.priority === 'urgent');\r\n  const pendingMessages = messages.filter((message) => message.status === 'pending');\r\n  const resolvedMessages = messages.filter((message) => message.status === 'resolved');\r\n\r\n  return (\r\n    <div>\r\n      <h2>Agent Dashboard</h2>\r\n\r\n      {/* Search bar */}\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={searchQuery}\r\n          onChange={handleSearchChange}\r\n          placeholder=\"Search by User ID, Message, or Date/Time\"\r\n          style={{ padding: '10px', width: '300px', marginBottom: '20px' }}\r\n        />\r\n      </div>\r\n\r\n      {/* Filter for status */}\r\n      <div>\r\n        <button onClick={() => setStatusFilter('pending')} style={{ marginRight: '10px' }}>\r\n          Show Pending Messages\r\n        </button>\r\n        <button onClick={() => setStatusFilter('resolved')} style={{ marginRight: '10px' }}>\r\n          Show Resolved Messages\r\n        </button>\r\n        <button onClick={() => setStatusFilter('')} style={{ marginRight: '10px' }}>\r\n          Show All Messages\r\n        </button>\r\n      </div>\r\n\r\n      {/* Display messages in three columns */}\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <div style={{ flex: 1, marginRight: '10px' }}>\r\n          <h3>Urgent Messages</h3>\r\n          {loading ? (\r\n            <p>Loading urgent messages...</p>\r\n          ) : urgentMessages.length > 0 ? (\r\n            <ul>\r\n              {urgentMessages.map((message) => (\r\n                <li key={message._id} style={{ marginBottom: '20px', borderBottom: '1px solid #ccc' }}>\r\n                  <p><strong>User ID:</strong> {message.customer}</p>\r\n                  <p><strong>Message:</strong> {message.message}</p>\r\n                  <p><strong>Timestamp:</strong> {new Date(message.timestamp).toLocaleString()}</p>\r\n                  <p><strong>Status:</strong> {message.status || 'pending'}</p>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p>No urgent messages.</p>\r\n          )}\r\n        </div>\r\n\r\n        <div style={{ flex: 1, marginRight: '10px' }}>\r\n          <h3>Pending Messages</h3>\r\n          {loading ? (\r\n            <p>Loading pending messages...</p>\r\n          ) : pendingMessages.length > 0 ? (\r\n            <ul>\r\n              {pendingMessages.map((message) => (\r\n                <li key={message._id} style={{ marginBottom: '20px', borderBottom: '1px solid #ccc' }}>\r\n                  <p><strong>User ID:</strong> {message.customer}</p>\r\n                  <p><strong>Message:</strong> {message.message}</p>\r\n                  <p><strong>Timestamp:</strong> {new Date(message.timestamp).toLocaleString()}</p>\r\n                  <p><strong>Status:</strong> {message.status || 'pending'}</p>\r\n                  {/* Reply functionality */}\r\n                  {message.status !== 'resolved' && (\r\n                    <button onClick={() => setSelectedMessageId(message._id)}>\r\n                      Reply\r\n                    </button>\r\n                  )}\r\n\r\n                  {selectedMessageId === message._id && (\r\n                    <div>\r\n                      <textarea\r\n                        value={reply}\r\n                        onChange={(e) => setReply(e.target.value)}\r\n                        placeholder=\"Type your reply here...\"\r\n                        rows=\"3\"\r\n                        style={{ width: '100%', marginTop: '10px' }}\r\n                      />\r\n                      <button onClick={() => handleReplySubmit(message._id)} style={{ marginTop: '10px' }}>\r\n                        Submit Reply\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p>No pending messages.</p>\r\n          )}\r\n        </div>\r\n\r\n        <div style={{ flex: 1 }}>\r\n          <h3>Resolved Messages</h3>\r\n          {loading ? (\r\n            <p>Loading resolved messages...</p>\r\n          ) : resolvedMessages.length > 0 ? (\r\n            <ul>\r\n              {resolvedMessages.map((message) => (\r\n                <li key={message._id} style={{ marginBottom: '20px', borderBottom: '1px solid #ccc' }}>\r\n                  <p><strong>User ID:</strong> {message.customer}</p>\r\n                  <p><strong>Message:</strong> {message.message}</p>\r\n                  <p><strong>Timestamp:</strong> {new Date(message.timestamp).toLocaleString()}</p>\r\n                  <p><strong>Status:</strong> {message.status || 'pending'}</p>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p>No resolved messages.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgentDashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMiB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChCT,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF,MAAMU,UAAU,GAAGH,YAAY,GAAG,WAAWA,YAAY,EAAE,GAAG,EAAE;QAChE,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqCF,UAAU,EAAE,CAAC;QAC/E,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClChB,WAAW,CAACiB,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,GAAGA,IAAI,GAAG,EAAE,CAAC;MAC9C,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDnB,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;MACnB,CAAC,SAAS;QACRE,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDS,aAAa,CAAC,CAAC,CAAC,CAAE;EACpB,CAAC,EAAE,CAACF,YAAY,CAAC,CAAC;EAElB,MAAMY,kBAAkB,GAAIC,CAAC,IAAK;IAChCd,cAAc,CAACc,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAOC,EAAE,IAAK;IACtC,IAAI,CAACvB,KAAK,CAACwB,IAAI,CAAC,CAAC,EAAE;MACjBC,KAAK,CAAC,wBAAwB,CAAC;MAC/B;IACF;IACA,IAAI;MACF,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsCY,EAAE,EAAE,EAAE;QACvEG,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAE9B,KAAK;UAAE+B,MAAM,EAAE;QAAW,CAAC,CAAC,CAAE;MACvD,CAAC,CAAC;MAEF,IAAIrB,QAAQ,CAACsB,EAAE,EAAE;QACfP,KAAK,CAAC,0BAA0B,CAAC;QACjCxB,QAAQ,CAAC,EAAE,CAAC;QACZE,oBAAoB,CAAC,IAAI,CAAC;;QAE1B;QACA,MAAM8B,eAAe,GAAG,MAAMtB,KAAK,CAAC,oCAAoC,CAAC;QACzE,MAAMuB,WAAW,GAAG,MAAMD,eAAe,CAACpB,IAAI,CAAC,CAAC;QAChDhB,WAAW,CAACiB,KAAK,CAACC,OAAO,CAACmB,WAAW,CAAC,GAAGA,WAAW,GAAG,EAAE,CAAC;MAC5D,CAAC,MAAM;QACLT,KAAK,CAAC,gCAAgC,CAAC;MACzC;IACF,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAMmB,gBAAgB,GAAGvC,QAAQ,CAACwC,MAAM,CAAEC,OAAO,IAAK;IACpD,MAAMC,QAAQ,GAAGD,OAAO,CAACC,QAAQ,IAAI,EAAE;IACvC,MAAMC,IAAI,GAAGF,OAAO,CAACA,OAAO,IAAI,EAAE;IAClC,MAAMG,SAAS,GAAG,IAAIC,IAAI,CAACJ,OAAO,CAACG,SAAS,CAAC,CAACE,cAAc,CAAC,CAAC;IAC9D,MAAMC,cAAc,GAAGvC,WAAW,CAACwC,WAAW,CAAC,CAAC;IAEhD,OACEN,QAAQ,CAACM,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACF,cAAc,CAAC,IAC/CJ,IAAI,CAACK,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACF,cAAc,CAAC,IAC3CH,SAAS,CAACI,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACF,cAAc,CAAC;EAEpD,CAAC,CAAC;;EAEF;EACA,MAAMG,cAAc,GAAGlD,QAAQ,CAACwC,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACU,QAAQ,KAAK,QAAQ,CAAC;EAClF,MAAMC,eAAe,GAAGpD,QAAQ,CAACwC,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACN,MAAM,KAAK,SAAS,CAAC;EAClF,MAAMkB,gBAAgB,GAAGrD,QAAQ,CAACwC,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACN,MAAM,KAAK,UAAU,CAAC;EAEpF,oBACEtC,OAAA;IAAAyD,QAAA,gBACEzD,OAAA;MAAAyD,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGxB7D,OAAA;MAAAyD,QAAA,eACEzD,OAAA;QACE8D,IAAI,EAAC,MAAM;QACXlC,KAAK,EAAEjB,WAAY;QACnBoD,QAAQ,EAAEtC,kBAAmB;QAC7BuC,WAAW,EAAC,0CAA0C;QACtDC,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEC,KAAK,EAAE,OAAO;UAAEC,YAAY,EAAE;QAAO;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGN7D,OAAA;MAAAyD,QAAA,gBACEzD,OAAA;QAAQqE,OAAO,EAAEA,CAAA,KAAMvD,eAAe,CAAC,SAAS,CAAE;QAACmD,KAAK,EAAE;UAAEK,WAAW,EAAE;QAAO,CAAE;QAAAb,QAAA,EAAC;MAEnF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT7D,OAAA;QAAQqE,OAAO,EAAEA,CAAA,KAAMvD,eAAe,CAAC,UAAU,CAAE;QAACmD,KAAK,EAAE;UAAEK,WAAW,EAAE;QAAO,CAAE;QAAAb,QAAA,EAAC;MAEpF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT7D,OAAA;QAAQqE,OAAO,EAAEA,CAAA,KAAMvD,eAAe,CAAC,EAAE,CAAE;QAACmD,KAAK,EAAE;UAAEK,WAAW,EAAE;QAAO,CAAE;QAAAb,QAAA,EAAC;MAE5E;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGN7D,OAAA;MAAKiE,KAAK,EAAE;QAAEM,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE;MAAgB,CAAE;MAAAf,QAAA,gBAC/DzD,OAAA;QAAKiE,KAAK,EAAE;UAAEQ,IAAI,EAAE,CAAC;UAAEH,WAAW,EAAE;QAAO,CAAE;QAAAb,QAAA,gBAC3CzD,OAAA;UAAAyD,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACvBxD,OAAO,gBACNL,OAAA;UAAAyD,QAAA,EAAG;QAA0B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,GAC/BR,cAAc,CAACqB,MAAM,GAAG,CAAC,gBAC3B1E,OAAA;UAAAyD,QAAA,EACGJ,cAAc,CAACsB,GAAG,CAAE/B,OAAO,iBAC1B5C,OAAA;YAAsBiE,KAAK,EAAE;cAAEG,YAAY,EAAE,MAAM;cAAEQ,YAAY,EAAE;YAAiB,CAAE;YAAAnB,QAAA,gBACpFzD,OAAA;cAAAyD,QAAA,gBAAGzD,OAAA;gBAAAyD,QAAA,EAAQ;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACjB,OAAO,CAACC,QAAQ;YAAA;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnD7D,OAAA;cAAAyD,QAAA,gBAAGzD,OAAA;gBAAAyD,QAAA,EAAQ;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACjB,OAAO,CAACA,OAAO;YAAA;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClD7D,OAAA;cAAAyD,QAAA,gBAAGzD,OAAA;gBAAAyD,QAAA,EAAQ;cAAU;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAAC,IAAIb,IAAI,CAACJ,OAAO,CAACG,SAAS,CAAC,CAACE,cAAc,CAAC,CAAC;YAAA;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjF7D,OAAA;cAAAyD,QAAA,gBAAGzD,OAAA;gBAAAyD,QAAA,EAAQ;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACjB,OAAO,CAACN,MAAM,IAAI,SAAS;YAAA;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GAJtDjB,OAAO,CAACiC,GAAG;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKhB,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,gBAEL7D,OAAA;UAAAyD,QAAA,EAAG;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAC1B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAEN7D,OAAA;QAAKiE,KAAK,EAAE;UAAEQ,IAAI,EAAE,CAAC;UAAEH,WAAW,EAAE;QAAO,CAAE;QAAAb,QAAA,gBAC3CzD,OAAA;UAAAyD,QAAA,EAAI;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACxBxD,OAAO,gBACNL,OAAA;UAAAyD,QAAA,EAAG;QAA2B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,GAChCN,eAAe,CAACmB,MAAM,GAAG,CAAC,gBAC5B1E,OAAA;UAAAyD,QAAA,EACGF,eAAe,CAACoB,GAAG,CAAE/B,OAAO,iBAC3B5C,OAAA;YAAsBiE,KAAK,EAAE;cAAEG,YAAY,EAAE,MAAM;cAAEQ,YAAY,EAAE;YAAiB,CAAE;YAAAnB,QAAA,gBACpFzD,OAAA;cAAAyD,QAAA,gBAAGzD,OAAA;gBAAAyD,QAAA,EAAQ;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACjB,OAAO,CAACC,QAAQ;YAAA;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnD7D,OAAA;cAAAyD,QAAA,gBAAGzD,OAAA;gBAAAyD,QAAA,EAAQ;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACjB,OAAO,CAACA,OAAO;YAAA;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClD7D,OAAA;cAAAyD,QAAA,gBAAGzD,OAAA;gBAAAyD,QAAA,EAAQ;cAAU;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAAC,IAAIb,IAAI,CAACJ,OAAO,CAACG,SAAS,CAAC,CAACE,cAAc,CAAC,CAAC;YAAA;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjF7D,OAAA;cAAAyD,QAAA,gBAAGzD,OAAA;gBAAAyD,QAAA,EAAQ;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACjB,OAAO,CAACN,MAAM,IAAI,SAAS;YAAA;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EAE5DjB,OAAO,CAACN,MAAM,KAAK,UAAU,iBAC5BtC,OAAA;cAAQqE,OAAO,EAAEA,CAAA,KAAM3D,oBAAoB,CAACkC,OAAO,CAACiC,GAAG,CAAE;cAAApB,QAAA,EAAC;YAE1D;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CACT,EAEApD,iBAAiB,KAAKmC,OAAO,CAACiC,GAAG,iBAChC7E,OAAA;cAAAyD,QAAA,gBACEzD,OAAA;gBACE4B,KAAK,EAAErB,KAAM;gBACbwD,QAAQ,EAAGrC,CAAC,IAAKlB,QAAQ,CAACkB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;gBAC1CoC,WAAW,EAAC,yBAAyB;gBACrCc,IAAI,EAAC,GAAG;gBACRb,KAAK,EAAE;kBAAEE,KAAK,EAAE,MAAM;kBAAEY,SAAS,EAAE;gBAAO;cAAE;gBAAArB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7C,CAAC,eACF7D,OAAA;gBAAQqE,OAAO,EAAEA,CAAA,KAAMxC,iBAAiB,CAACe,OAAO,CAACiC,GAAG,CAAE;gBAACZ,KAAK,EAAE;kBAAEc,SAAS,EAAE;gBAAO,CAAE;gBAAAtB,QAAA,EAAC;cAErF;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CACN;UAAA,GAzBMjB,OAAO,CAACiC,GAAG;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA0BhB,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,gBAEL7D,OAAA;UAAAyD,QAAA,EAAG;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAC3B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAEN7D,OAAA;QAAKiE,KAAK,EAAE;UAAEQ,IAAI,EAAE;QAAE,CAAE;QAAAhB,QAAA,gBACtBzD,OAAA;UAAAyD,QAAA,EAAI;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACzBxD,OAAO,gBACNL,OAAA;UAAAyD,QAAA,EAAG;QAA4B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,GACjCL,gBAAgB,CAACkB,MAAM,GAAG,CAAC,gBAC7B1E,OAAA;UAAAyD,QAAA,EACGD,gBAAgB,CAACmB,GAAG,CAAE/B,OAAO,iBAC5B5C,OAAA;YAAsBiE,KAAK,EAAE;cAAEG,YAAY,EAAE,MAAM;cAAEQ,YAAY,EAAE;YAAiB,CAAE;YAAAnB,QAAA,gBACpFzD,OAAA;cAAAyD,QAAA,gBAAGzD,OAAA;gBAAAyD,QAAA,EAAQ;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACjB,OAAO,CAACC,QAAQ;YAAA;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnD7D,OAAA;cAAAyD,QAAA,gBAAGzD,OAAA;gBAAAyD,QAAA,EAAQ;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACjB,OAAO,CAACA,OAAO;YAAA;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClD7D,OAAA;cAAAyD,QAAA,gBAAGzD,OAAA;gBAAAyD,QAAA,EAAQ;cAAU;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAAC,IAAIb,IAAI,CAACJ,OAAO,CAACG,SAAS,CAAC,CAACE,cAAc,CAAC,CAAC;YAAA;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjF7D,OAAA;cAAAyD,QAAA,gBAAGzD,OAAA;gBAAAyD,QAAA,EAAQ;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACjB,OAAO,CAACN,MAAM,IAAI,SAAS;YAAA;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GAJtDjB,OAAO,CAACiC,GAAG;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKhB,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,gBAEL7D,OAAA;UAAAyD,QAAA,EAAG;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAC5B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3D,EAAA,CAjMID,cAAc;AAAA+E,EAAA,GAAd/E,cAAc;AAmMpB,eAAeA,cAAc;AAAC,IAAA+E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}