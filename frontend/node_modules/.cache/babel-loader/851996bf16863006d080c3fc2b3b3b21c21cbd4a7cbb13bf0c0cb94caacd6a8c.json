{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\speak\\\\Desktop\\\\CSMessagingApp\\\\frontend\\\\src\\\\components\\\\AgentDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/AgentDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AgentDashboard = ({\n  agentUsername\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [reply, setReply] = useState('');\n  const [selectedMessageId, setSelectedMessageId] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // List of keywords that indicate urgency\n  const urgentKeywords = ['loan', 'money', 'disburse', 'approve', 'update'];\n  useEffect(() => {\n    const fetchMessages = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch('http://localhost:5000/api/messages');\n        const data = await response.json();\n        setMessages(Array.isArray(data) ? data : []);\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n        setMessages([]); // Clear messages on error\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMessages(); // Initial fetch\n  }, []);\n  const handleSearchChange = e => {\n    setSearchQuery(e.target.value);\n  };\n  const handleReplySubmit = async id => {\n    if (!reply.trim()) {\n      alert('Reply cannot be empty.');\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:5000/api/messages/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          reply,\n          status: 'resolved'\n        }) // Update status to \"resolved\"\n      });\n      if (response.ok) {\n        alert('Reply sent successfully!');\n        setReply('');\n        setSelectedMessageId(null);\n\n        // Refetch messages after replying\n        const updatedResponse = await fetch('http://localhost:5000/api/messages');\n        const updatedData = await updatedResponse.json();\n        setMessages(Array.isArray(updatedData) ? updatedData : []);\n      } else {\n        alert('Error replying to the message.');\n      }\n    } catch (error) {\n      console.error('Error sending reply:', error);\n    }\n  };\n\n  // Function to check if a message contains urgent keywords\n  const isUrgent = message => {\n    const messageText = (message.message || '').toLowerCase();\n    return urgentKeywords.some(keyword => messageText.includes(keyword));\n  };\n\n  // Separate messages based on their status and urgency\n  const urgentMessages = messages.filter(isUrgent);\n  const pendingMessages = messages.filter(message => message.status === 'pending');\n  const resolvedMessages = messages.filter(message => message.status === 'resolved');\n  const filteredMessages = messages.filter(message => {\n    const customer = message.customer || '';\n    const text = message.message || '';\n    const timestamp = new Date(message.timestamp).toLocaleString();\n    const lowerCaseQuery = searchQuery.toLowerCase();\n    return customer.toLowerCase().includes(lowerCaseQuery) || text.toLowerCase().includes(lowerCaseQuery) || timestamp.toLowerCase().includes(lowerCaseQuery);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, Agent \", agentUsername, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchQuery,\n        onChange: handleSearchChange,\n        placeholder: \"Search by User ID, Message, or Date/Time\",\n        className: \"search-bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: \"Urgent Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading urgent messages...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this) : urgentMessages.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"message-list\",\n          children: urgentMessages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"message-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"User ID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 22\n              }, this), \" \", message.customer]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Message:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 22\n              }, this), \" \", message.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Timestamp:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 22\n              }, this), \" \", new Date(message.timestamp).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 22\n              }, this), \" \", message.status || 'pending']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"reply-button\",\n              onClick: () => setSelectedMessageId(message._id),\n              children: \"Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this), selectedMessageId === message._id && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reply-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: reply,\n                onChange: e => setReply(e.target.value),\n                placeholder: \"Type your reply here...\",\n                rows: \"3\",\n                className: \"reply-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"submit-reply-button\",\n                onClick: () => handleReplySubmit(message._id),\n                children: \"Submit Reply\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 21\n            }, this)]\n          }, message._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No urgent messages.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: \"Pending Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading pending messages...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this) : pendingMessages.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"message-list\",\n          children: pendingMessages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"message-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"User ID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 22\n              }, this), \" \", message.customer]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Message:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 22\n              }, this), \" \", message.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Timestamp:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 22\n              }, this), \" \", new Date(message.timestamp).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 22\n              }, this), \" \", message.status || 'pending']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this), message.status !== 'resolved' && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"reply-button\",\n              onClick: () => setSelectedMessageId(message._id),\n              children: \"Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 21\n            }, this), selectedMessageId === message._id && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reply-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: reply,\n                onChange: e => setReply(e.target.value),\n                placeholder: \"Type your reply here...\",\n                rows: \"3\",\n                className: \"reply-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"submit-reply-button\",\n                onClick: () => handleReplySubmit(message._id),\n                children: \"Submit Reply\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 21\n            }, this)]\n          }, message._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No pending messages.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: \"Resolved Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading resolved messages...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this) : resolvedMessages.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"message-list\",\n          children: resolvedMessages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"message-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"User ID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 22\n              }, this), \" \", message.customer]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Message:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 22\n              }, this), \" \", message.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Timestamp:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 22\n              }, this), \" \", new Date(message.timestamp).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 22\n              }, this), \" \", message.status || 'pending']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this)]\n          }, message._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No resolved messages.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(AgentDashboard, \"f5QcRIv+mEeVdrv0HGhyfuCFgJM=\");\n_c = AgentDashboard;\nexport default AgentDashboard;\nvar _c;\n$RefreshReg$(_c, \"AgentDashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AgentDashboard","agentUsername","_s","messages","setMessages","loading","setLoading","reply","setReply","selectedMessageId","setSelectedMessageId","searchQuery","setSearchQuery","urgentKeywords","fetchMessages","response","fetch","data","json","Array","isArray","error","console","handleSearchChange","e","target","value","handleReplySubmit","id","trim","alert","method","headers","body","JSON","stringify","status","ok","updatedResponse","updatedData","isUrgent","message","messageText","toLowerCase","some","keyword","includes","urgentMessages","filter","pendingMessages","resolvedMessages","filteredMessages","customer","text","timestamp","Date","toLocaleString","lowerCaseQuery","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","length","map","onClick","_id","rows","_c","$RefreshReg$"],"sources":["C:/Users/speak/Desktop/CSMessagingApp/frontend/src/components/AgentDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/AgentDashboard.css';\r\n\r\nconst AgentDashboard = ({ agentUsername }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [reply, setReply] = useState('');\r\n  const [selectedMessageId, setSelectedMessageId] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  // List of keywords that indicate urgency\r\n  const urgentKeywords = ['loan', 'money', 'disburse', 'approve', 'update'];\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/messages');\r\n        const data = await response.json();\r\n        setMessages(Array.isArray(data) ? data : []);\r\n      } catch (error) {\r\n        console.error('Error fetching messages:', error);\r\n        setMessages([]); // Clear messages on error\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMessages();  // Initial fetch\r\n  }, []);\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchQuery(e.target.value);\r\n  };\r\n\r\n  const handleReplySubmit = async (id) => {\r\n    if (!reply.trim()) {\r\n      alert('Reply cannot be empty.');\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/messages/${id}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ reply, status: 'resolved' }), // Update status to \"resolved\"\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert('Reply sent successfully!');\r\n        setReply('');\r\n        setSelectedMessageId(null);\r\n\r\n        // Refetch messages after replying\r\n        const updatedResponse = await fetch('http://localhost:5000/api/messages');\r\n        const updatedData = await updatedResponse.json();\r\n        setMessages(Array.isArray(updatedData) ? updatedData : []);\r\n      } else {\r\n        alert('Error replying to the message.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending reply:', error);\r\n    }\r\n  };\r\n\r\n  // Function to check if a message contains urgent keywords\r\n  const isUrgent = (message) => {\r\n    const messageText = (message.message || '').toLowerCase();\r\n    return urgentKeywords.some((keyword) => messageText.includes(keyword));\r\n  };\r\n\r\n  // Separate messages based on their status and urgency\r\n  const urgentMessages = messages.filter(isUrgent);\r\n  const pendingMessages = messages.filter((message) => message.status === 'pending');\r\n  const resolvedMessages = messages.filter((message) => message.status === 'resolved');\r\n\r\n  const filteredMessages = messages.filter((message) => {\r\n    const customer = message.customer || '';\r\n    const text = message.message || '';\r\n    const timestamp = new Date(message.timestamp).toLocaleString();\r\n    const lowerCaseQuery = searchQuery.toLowerCase();\r\n\r\n    return (\r\n      customer.toLowerCase().includes(lowerCaseQuery) ||\r\n      text.toLowerCase().includes(lowerCaseQuery) ||\r\n      timestamp.toLowerCase().includes(lowerCaseQuery)\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className=\"dashboard-header\">\r\n        <h2>Welcome, Agent {agentUsername}!</h2>\r\n        <input\r\n          type=\"text\"\r\n          value={searchQuery}\r\n          onChange={handleSearchChange}\r\n          placeholder=\"Search by User ID, Message, or Date/Time\"\r\n          className=\"search-bar\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"messages-container\">\r\n        {/* Urgent Messages */}\r\n        <div className=\"message-section\">\r\n          <h3 className=\"section-title\">Urgent Messages</h3>\r\n          {loading ? (\r\n            <p>Loading urgent messages...</p>\r\n          ) : urgentMessages.length > 0 ? (\r\n            <ul className=\"message-list\">\r\n              {urgentMessages.map((message) => (\r\n                <li key={message._id} className=\"message-item\">\r\n                  <p><strong>User ID:</strong> {message.customer}</p>\r\n                  <p><strong>Message:</strong> {message.message}</p>\r\n                  <p><strong>Timestamp:</strong> {new Date(message.timestamp).toLocaleString()}</p>\r\n                  <p><strong>Status:</strong> {message.status || 'pending'}</p>\r\n                  <button className=\"reply-button\" onClick={() => setSelectedMessageId(message._id)}>\r\n                    Reply\r\n                  </button>\r\n\r\n                  {selectedMessageId === message._id && (\r\n                    <div className=\"reply-section\">\r\n                      <textarea\r\n                        value={reply}\r\n                        onChange={(e) => setReply(e.target.value)}\r\n                        placeholder=\"Type your reply here...\"\r\n                        rows=\"3\"\r\n                        className=\"reply-input\"\r\n                      />\r\n                      <button\r\n                        className=\"submit-reply-button\"\r\n                        onClick={() => handleReplySubmit(message._id)}\r\n                      >\r\n                        Submit Reply\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p>No urgent messages.</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Pending Messages */}\r\n        <div className=\"message-section\">\r\n          <h3 className=\"section-title\">Pending Messages</h3>\r\n          {loading ? (\r\n            <p>Loading pending messages...</p>\r\n          ) : pendingMessages.length > 0 ? (\r\n            <ul className=\"message-list\">\r\n              {pendingMessages.map((message) => (\r\n                <li key={message._id} className=\"message-item\">\r\n                  <p><strong>User ID:</strong> {message.customer}</p>\r\n                  <p><strong>Message:</strong> {message.message}</p>\r\n                  <p><strong>Timestamp:</strong> {new Date(message.timestamp).toLocaleString()}</p>\r\n                  <p><strong>Status:</strong> {message.status || 'pending'}</p>\r\n                  {message.status !== 'resolved' && (\r\n                    <button className=\"reply-button\" onClick={() => setSelectedMessageId(message._id)}>\r\n                      Reply\r\n                    </button>\r\n                  )}\r\n\r\n                  {selectedMessageId === message._id && (\r\n                    <div className=\"reply-section\">\r\n                      <textarea\r\n                        value={reply}\r\n                        onChange={(e) => setReply(e.target.value)}\r\n                        placeholder=\"Type your reply here...\"\r\n                        rows=\"3\"\r\n                        className=\"reply-input\"\r\n                      />\r\n                      <button\r\n                        className=\"submit-reply-button\"\r\n                        onClick={() => handleReplySubmit(message._id)}\r\n                      >\r\n                        Submit Reply\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p>No pending messages.</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Resolved Messages */}\r\n        <div className=\"message-section\">\r\n          <h3 className=\"section-title\">Resolved Messages</h3>\r\n          {loading ? (\r\n            <p>Loading resolved messages...</p>\r\n          ) : resolvedMessages.length > 0 ? (\r\n            <ul className=\"message-list\">\r\n              {resolvedMessages.map((message) => (\r\n                <li key={message._id} className=\"message-item\">\r\n                  <p><strong>User ID:</strong> {message.customer}</p>\r\n                  <p><strong>Message:</strong> {message.message}</p>\r\n                  <p><strong>Timestamp:</strong> {new Date(message.timestamp).toLocaleString()}</p>\r\n                  <p><strong>Status:</strong> {message.status || 'pending'}</p>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p>No resolved messages.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgentDashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}