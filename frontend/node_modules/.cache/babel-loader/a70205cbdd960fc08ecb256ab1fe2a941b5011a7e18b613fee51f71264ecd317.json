{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\speak\\\\Desktop\\\\CSMessagingApp\\\\frontend\\\\src\\\\components\\\\MessageDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom'; // useNavigate instead of useHistory\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageDetails = () => {\n  _s();\n  const [message, setMessage] = useState(null);\n  const [response, setResponse] = useState('');\n  const [urgent, setUrgent] = useState(false);\n  const [error, setError] = useState(null); // For error handling\n  const {\n    messageId\n  } = useParams(); // Get the message ID from the URL\n  const navigate = useNavigate(); // For navigation after submission\n\n  useEffect(() => {\n    // Fetch the selected message details using fetch instead of axios\n    fetch(`http://localhost:5000/api/messages/${messageId}`).then(response => response.json()).then(data => setMessage(data)).catch(err => {\n      console.error('Error fetching message:', err);\n      setError('Failed to load message details');\n    });\n  }, [messageId]);\n  const handleResponseSubmit = () => {\n    if (!response.trim()) {\n      setError('Please enter a response before submitting.');\n      return;\n    }\n\n    // Send the response and update the status and urgency flag using fetch instead of axios\n    fetch(`http://localhost:5000/api/messages/${messageId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        response,\n        urgent,\n        agentId: 'agent1' // Replace with actual agent ID\n      })\n    }).then(response => response.json()).then(data => {\n      setMessage(data); // Update the message data with the updated response\n      setResponse(''); // Clear the response field\n      setUrgent(false); // Reset the urgency flag\n      setError(null); // Clear any previous errors\n      navigate('/'); // Navigate back to the main page or message list\n    }).catch(err => {\n      console.error('Error updating message:', err);\n      setError('Failed to submit response.');\n    });\n  };\n  if (!message) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Message Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Customer:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 10\n      }, this), \" \", message.customer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Message:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 10\n      }, this), \" \", message.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 10\n      }, this), \" \", message.status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Urgent:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 10\n      }, this), \" \", message.urgent ? 'Yes' : 'No']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Timestamp:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 10\n      }, this), \" \", new Date(message.timestamp).toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: response,\n      onChange: e => setResponse(e.target.value),\n      placeholder: \"Write your response\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Mark as Urgent\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: urgent,\n          onChange: () => setUrgent(!urgent)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleResponseSubmit,\n      children: \"Submit Response\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageDetails, \"zDj7yk8bDENjTNQU8Tx3sTnEKqA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = MessageDetails;\nexport default MessageDetails;\nvar _c;\n$RefreshReg$(_c, \"MessageDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","MessageDetails","_s","message","setMessage","response","setResponse","urgent","setUrgent","error","setError","messageId","navigate","fetch","then","json","data","catch","err","console","handleResponseSubmit","trim","method","headers","body","JSON","stringify","agentId","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","customer","status","Date","timestamp","toLocaleString","value","onChange","e","target","placeholder","type","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Users/speak/Desktop/CSMessagingApp/frontend/src/components/MessageDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom'; // useNavigate instead of useHistory\r\n\r\nconst MessageDetails = () => {\r\n  const [message, setMessage] = useState(null);\r\n  const [response, setResponse] = useState('');\r\n  const [urgent, setUrgent] = useState(false);\r\n  const [error, setError] = useState(null); // For error handling\r\n  const { messageId } = useParams();  // Get the message ID from the URL\r\n  const navigate = useNavigate(); // For navigation after submission\r\n\r\n  useEffect(() => {\r\n    // Fetch the selected message details using fetch instead of axios\r\n    fetch(`http://localhost:5000/api/messages/${messageId}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setMessage(data))\r\n      .catch((err) => {\r\n        console.error('Error fetching message:', err);\r\n        setError('Failed to load message details');\r\n      });\r\n  }, [messageId]);\r\n\r\n  const handleResponseSubmit = () => {\r\n    if (!response.trim()) {\r\n      setError('Please enter a response before submitting.');\r\n      return;\r\n    }\r\n\r\n    // Send the response and update the status and urgency flag using fetch instead of axios\r\n    fetch(`http://localhost:5000/api/messages/${messageId}`, {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        response,\r\n        urgent,\r\n        agentId: 'agent1',  // Replace with actual agent ID\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setMessage(data);  // Update the message data with the updated response\r\n        setResponse('');  // Clear the response field\r\n        setUrgent(false);  // Reset the urgency flag\r\n        setError(null);  // Clear any previous errors\r\n        navigate('/'); // Navigate back to the main page or message list\r\n      })\r\n      .catch((err) => {\r\n        console.error('Error updating message:', err);\r\n        setError('Failed to submit response.');\r\n      });\r\n  };\r\n\r\n  if (!message) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Message Details</h2>\r\n      {error && <div style={{ color: 'red' }}>{error}</div>} {/* Show error message if any */}\r\n\r\n      <p><strong>Customer:</strong> {message.customer}</p>\r\n      <p><strong>Message:</strong> {message.message}</p>\r\n      <p><strong>Status:</strong> {message.status}</p>\r\n      <p><strong>Urgent:</strong> {message.urgent ? 'Yes' : 'No'}</p>\r\n      <p><strong>Timestamp:</strong> {new Date(message.timestamp).toLocaleString()}</p>\r\n\r\n      <textarea \r\n        value={response} \r\n        onChange={(e) => setResponse(e.target.value)} \r\n        placeholder=\"Write your response\"\r\n      />\r\n      \r\n      <div>\r\n        <label>\r\n          Mark as Urgent\r\n          <input \r\n            type=\"checkbox\" \r\n            checked={urgent} \r\n            onChange={() => setUrgent(!urgent)} \r\n          />\r\n        </label>\r\n      </div>\r\n      \r\n      <button onClick={handleResponseSubmit}>Submit Response</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageDetails;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}