{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\speak\\\\Desktop\\\\CSMessagingApp\\\\frontend\\\\src\\\\components\\\\AgentDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AgentDashboard = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [reply, setReply] = useState('');\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Fetch messages on component mount\n  useEffect(() => {\n    fetch('http://localhost:5000/api/messages').then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch messages');\n      }\n      return response.json();\n    }).then(data => {\n      setMessages(data);\n    }).catch(err => {\n      console.error('Error fetching messages:', err);\n      setError('Failed to fetch messages');\n    });\n  }, []);\n\n  // Update message status and send reply\n  const handleResolve = messageId => {\n    const updatedMessage = {\n      status: 'Resolved',\n      reply\n    };\n    fetch(`http://localhost:5000/api/messages/${messageId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedMessage)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to update message');\n      }\n      return response.json();\n    }).then(updated => {\n      // Update local state\n      setMessages(prevMessages => prevMessages.map(msg => msg._id === messageId ? updated : msg));\n      setReply('');\n      setSelectedMessage(null);\n    }).catch(err => {\n      console.error('Error updating message:', err);\n      setError('Failed to update message');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Agent Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"5\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"User ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Timestamp (UTC)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Message Body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Reply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: messages.length > 0 ? messages.map(message => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: message.userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(message.timestamp).toUTCString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: message.status || 'Open'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: message.status !== 'Resolved' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                rows: \"2\",\n                cols: \"30\",\n                value: selectedMessage === message._id ? reply : '',\n                onChange: e => setReply(e.target.value),\n                onFocus: () => setSelectedMessage(message._id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleResolve(message._id),\n                disabled: !reply,\n                children: \"Resolve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Resolved\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)]\n        }, message._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"5\",\n            children: \"No messages to display.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(AgentDashboard, \"xrNjdw4pggXdWWJ1b5Ixh8L2c7o=\");\n_c = AgentDashboard;\nexport default AgentDashboard;\nvar _c;\n$RefreshReg$(_c, \"AgentDashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","AgentDashboard","_s","messages","setMessages","reply","setReply","selectedMessage","setSelectedMessage","error","setError","fetch","then","response","ok","Error","json","data","catch","err","console","handleResolve","messageId","updatedMessage","status","method","headers","body","JSON","stringify","updated","prevMessages","map","msg","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","border","cellPadding","length","message","userId","Date","timestamp","toUTCString","text","rows","cols","value","onChange","e","target","onFocus","onClick","disabled","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/speak/Desktop/CSMessagingApp/frontend/src/components/AgentDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AgentDashboard = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [reply, setReply] = useState('');\r\n  const [selectedMessage, setSelectedMessage] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch messages on component mount\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/api/messages')\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch messages');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setMessages(data);\r\n      })\r\n      .catch((err) => {\r\n        console.error('Error fetching messages:', err);\r\n        setError('Failed to fetch messages');\r\n      });\r\n  }, []);\r\n\r\n  // Update message status and send reply\r\n  const handleResolve = (messageId) => {\r\n    const updatedMessage = { status: 'Resolved', reply };\r\n\r\n    fetch(`http://localhost:5000/api/messages/${messageId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(updatedMessage),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Failed to update message');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((updated) => {\r\n        // Update local state\r\n        setMessages((prevMessages) =>\r\n          prevMessages.map((msg) => (msg._id === messageId ? updated : msg))\r\n        );\r\n        setReply('');\r\n        setSelectedMessage(null);\r\n      })\r\n      .catch((err) => {\r\n        console.error('Error updating message:', err);\r\n        setError('Failed to update message');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Agent Dashboard</h1>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <table border=\"1\" cellPadding=\"5\">\r\n        <thead>\r\n          <tr>\r\n            <th>User ID</th>\r\n            <th>Timestamp (UTC)</th>\r\n            <th>Message Body</th>\r\n            <th>Status</th>\r\n            <th>Reply</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {messages.length > 0 ? (\r\n            messages.map((message) => (\r\n              <tr key={message._id}>\r\n                <td>{message.userId}</td>\r\n                <td>{new Date(message.timestamp).toUTCString()}</td>\r\n                <td>{message.text}</td>\r\n                <td>{message.status || 'Open'}</td>\r\n                <td>\r\n                  {message.status !== 'Resolved' ? (\r\n                    <>\r\n                      <textarea\r\n                        rows=\"2\"\r\n                        cols=\"30\"\r\n                        value={selectedMessage === message._id ? reply : ''}\r\n                        onChange={(e) => setReply(e.target.value)}\r\n                        onFocus={() => setSelectedMessage(message._id)}\r\n                      />\r\n                      <button\r\n                        onClick={() => handleResolve(message._id)}\r\n                        disabled={!reply}\r\n                      >\r\n                        Resolve\r\n                      </button>\r\n                    </>\r\n                  ) : (\r\n                    <span>Resolved</span>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"5\">No messages to display.</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgentDashboard;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}