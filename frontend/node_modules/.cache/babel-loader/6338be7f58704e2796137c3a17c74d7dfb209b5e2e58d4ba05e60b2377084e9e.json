{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\speak\\\\Desktop\\\\CSMessagingApp\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport AgentLogin from './components/AgentLogin';\nimport UserQueryForm from './components/UserQueryForm';\nimport AgentDashboard from './components/AgentDashboard';\nimport MessageDetails from './components/MessageDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [agentId, setAgentId] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  useEffect(() => {\n    if (agentId) {\n      fetch(`http://localhost:5000/api/messages?agentId=${agentId}`).then(response => response.json()).then(data => setMessages(data)).catch(error => console.error('Error fetching messages:', error));\n    }\n  }, [agentId]);\n  const handleLogin = agentId => {\n    setAgentId(agentId); // Set the logged-in agent ID\n  };\n  const handleMessageClick = message => {\n    setSelectedMessage(message); // Set the selected message to view details\n  };\n  return (\n    /*#__PURE__*/\n    // Wrap the entire app inside one BrowserRouter\n    _jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user\",\n          element: /*#__PURE__*/_jsxDEV(UserQueryForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/agent-login\",\n          element: /*#__PURE__*/_jsxDEV(AgentLogin, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/agent-dashboard\",\n          element: /*#__PURE__*/_jsxDEV(AgentDashboard, {\n            messages: messages,\n            onMessageClick: handleMessageClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/message-details\",\n          element: /*#__PURE__*/_jsxDEV(MessageDetails, {\n            message: selectedMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(App, \"LSMo+W3oedYqpN7fzYb72s5lvb4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","AgentLogin","UserQueryForm","AgentDashboard","MessageDetails","jsxDEV","_jsxDEV","App","_s","agentId","setAgentId","messages","setMessages","selectedMessage","setSelectedMessage","fetch","then","response","json","data","catch","error","console","handleLogin","handleMessageClick","message","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onMessageClick","_c","$RefreshReg$"],"sources":["C:/Users/speak/Desktop/CSMessagingApp/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport AgentLogin from './components/AgentLogin';\r\nimport UserQueryForm from './components/UserQueryForm';\r\nimport AgentDashboard from './components/AgentDashboard';\r\nimport MessageDetails from './components/MessageDetails';\r\n\r\nconst App = () => {\r\n  const [agentId, setAgentId] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [selectedMessage, setSelectedMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (agentId) {\r\n      fetch(`http://localhost:5000/api/messages?agentId=${agentId}`)\r\n        .then((response) => response.json())\r\n        .then((data) => setMessages(data))\r\n        .catch((error) => console.error('Error fetching messages:', error));\r\n    }\r\n  }, [agentId]);\r\n\r\n  const handleLogin = (agentId) => {\r\n    setAgentId(agentId);  // Set the logged-in agent ID\r\n  };\r\n\r\n  const handleMessageClick = (message) => {\r\n    setSelectedMessage(message);  // Set the selected message to view details\r\n  };\r\n\r\n  return (\r\n    // Wrap the entire app inside one BrowserRouter\r\n    <Router>\r\n      <Routes>\r\n        {/* Route for User Query Form (User Screen) */}\r\n        <Route path=\"/user\" element={<UserQueryForm />} />\r\n\r\n        {/* Route for Agent Login */}\r\n        <Route path=\"/agent-login\" element={<AgentLogin onLogin={handleLogin} />} />\r\n\r\n        {/* Route for Agent Dashboard to view messages */}\r\n        <Route\r\n          path=\"/agent-dashboard\"\r\n          element={<AgentDashboard messages={messages} onMessageClick={handleMessageClick} />}\r\n        />\r\n\r\n        {/* Route to view message details for agents */}\r\n        <Route path=\"/message-details\" element={<MessageDetails message={selectedMessage} />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}