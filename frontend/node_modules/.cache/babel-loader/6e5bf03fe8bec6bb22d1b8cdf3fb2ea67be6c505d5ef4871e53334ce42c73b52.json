{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\speak\\\\Desktop\\\\CSMessagingApp\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState, useEffect } from 'react';\nimport AgentLogin from './components/AgentLogin';\nimport MessageForm from './components/MessageForm';\nimport MessageItem from './components/MessageItem';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [agentId, setAgentId] = useState(null);\n\n  // Fetch messages assigned to the logged-in agent\n  useEffect(() => {\n    if (agentId) {\n      fetch(`http://localhost:5000/api/messages?agentId=${agentId}`).then(response => response.json()).then(data => setMessages(data)).catch(error => console.error('Error fetching messages:', error));\n    }\n  }, [agentId]);\n  const handleFormSubmit = formData => {\n    fetch('http://localhost:5000/api/messages', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }).then(response => response.json()).then(data => setMessages(prevMessages => [...prevMessages, data])).catch(error => console.error('Error posting message:', error));\n  };\n  const handleLogin = agentId => {\n    setAgentId(agentId); // Set the logged-in agent ID\n  };\n\n  // Handle response submission for a message\n  const handleResponseSubmit = (messageId, response) => {\n    // Trim messageId to remove any unwanted spaces or newline characters\n    const cleanedMessageId = messageId.trim();\n    fetch(`http://localhost:5000/api/messages/${cleanedMessageId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        response,\n        agentId\n      })\n    }).then(response => response.json()).then(updatedMessage => {\n      setMessages(prevMessages => prevMessages.map(message => message._id === updatedMessage._id ? updatedMessage : message));\n    }).catch(error => console.error('Error updating message:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !agentId ? /*#__PURE__*/_jsxDEV(AgentLogin, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome Agent \", agentId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MessageForm, {\n        onSubmit: handleFormSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Messages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: messages.map(message => /*#__PURE__*/_jsxDEV(MessageItem, {\n          message: message,\n          onResponseSubmit: handleResponseSubmit,\n          isUrgent: message.urgent // Pass the urgent flag to MessageItem\n        }, message._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"cY/FolZko2yfqUab8ZzRLs+EDFM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AgentLogin","MessageForm","MessageItem","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","messages","setMessages","agentId","setAgentId","fetch","then","response","json","data","catch","error","console","handleFormSubmit","formData","method","headers","body","JSON","stringify","prevMessages","handleLogin","handleResponseSubmit","messageId","cleanedMessageId","trim","updatedMessage","map","message","_id","children","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onResponseSubmit","isUrgent","urgent","_c","$RefreshReg$"],"sources":["C:/Users/speak/Desktop/CSMessagingApp/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport AgentLogin from './components/AgentLogin';\r\nimport MessageForm from './components/MessageForm';\r\nimport MessageItem from './components/MessageItem';\r\n\r\nconst App = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [agentId, setAgentId] = useState(null);\r\n\r\n  // Fetch messages assigned to the logged-in agent\r\n  useEffect(() => {\r\n    if (agentId) {\r\n      fetch(`http://localhost:5000/api/messages?agentId=${agentId}`)\r\n        .then((response) => response.json())\r\n        .then((data) => setMessages(data))\r\n        .catch((error) => console.error('Error fetching messages:', error));\r\n    }\r\n  }, [agentId]);\r\n\r\n  const handleFormSubmit = (formData) => {\r\n    fetch('http://localhost:5000/api/messages', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(formData),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => setMessages((prevMessages) => [...prevMessages, data]))\r\n      .catch((error) => console.error('Error posting message:', error));\r\n  };\r\n\r\n  const handleLogin = (agentId) => {\r\n    setAgentId(agentId);  // Set the logged-in agent ID\r\n  };\r\n\r\n  // Handle response submission for a message\r\n  const handleResponseSubmit = (messageId, response) => {\r\n    // Trim messageId to remove any unwanted spaces or newline characters\r\n    const cleanedMessageId = messageId.trim();\r\n    \r\n    fetch(`http://localhost:5000/api/messages/${cleanedMessageId}`, {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ response, agentId }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((updatedMessage) => {\r\n        setMessages((prevMessages) =>\r\n          prevMessages.map((message) =>\r\n            message._id === updatedMessage._id ? updatedMessage : message\r\n          )\r\n        );\r\n      })\r\n      .catch((error) => console.error('Error updating message:', error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!agentId ? (\r\n        <AgentLogin onLogin={handleLogin} />\r\n      ) : (\r\n        <>\r\n          <h1>Welcome Agent {agentId}</h1>\r\n          <MessageForm onSubmit={handleFormSubmit} />\r\n          <h2>Messages:</h2>\r\n          <ul>\r\n            {messages.map((message) => (\r\n              <MessageItem\r\n                key={message._id}\r\n                message={message}\r\n                onResponseSubmit={handleResponseSubmit}\r\n                isUrgent={message.urgent}  // Pass the urgent flag to MessageItem\r\n              />\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,IAAIY,OAAO,EAAE;MACXE,KAAK,CAAC,8CAA8CF,OAAO,EAAE,CAAC,CAC3DG,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKP,WAAW,CAACO,IAAI,CAAC,CAAC,CACjCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;IACvE;EACF,CAAC,EAAE,CAACR,OAAO,CAAC,CAAC;EAEb,MAAMU,gBAAgB,GAAIC,QAAQ,IAAK;IACrCT,KAAK,CAAC,oCAAoC,EAAE;MAC1CU,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ;IAC/B,CAAC,CAAC,CACCR,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKP,WAAW,CAAEkB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEX,IAAI,CAAC,CAAC,CAAC,CACtEC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC;EACrE,CAAC;EAED,MAAMU,WAAW,GAAIlB,OAAO,IAAK;IAC/BC,UAAU,CAACD,OAAO,CAAC,CAAC,CAAE;EACxB,CAAC;;EAED;EACA,MAAMmB,oBAAoB,GAAGA,CAACC,SAAS,EAAEhB,QAAQ,KAAK;IACpD;IACA,MAAMiB,gBAAgB,GAAGD,SAAS,CAACE,IAAI,CAAC,CAAC;IAEzCpB,KAAK,CAAC,sCAAsCmB,gBAAgB,EAAE,EAAE;MAC9DT,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEZ,QAAQ;QAAEJ;MAAQ,CAAC;IAC5C,CAAC,CAAC,CACCG,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEoB,cAAc,IAAK;MACxBxB,WAAW,CAAEkB,YAAY,IACvBA,YAAY,CAACO,GAAG,CAAEC,OAAO,IACvBA,OAAO,CAACC,GAAG,KAAKH,cAAc,CAACG,GAAG,GAAGH,cAAc,GAAGE,OACxD,CACF,CAAC;IACH,CAAC,CAAC,CACDlB,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;EACtE,CAAC;EAED,oBACEf,OAAA;IAAAkC,QAAA,EACG,CAAC3B,OAAO,gBACPP,OAAA,CAACJ,UAAU;MAACuC,OAAO,EAAEV;IAAY;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEpCvC,OAAA,CAAAE,SAAA;MAAAgC,QAAA,gBACElC,OAAA;QAAAkC,QAAA,GAAI,gBAAc,EAAC3B,OAAO;MAAA;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChCvC,OAAA,CAACH,WAAW;QAAC2C,QAAQ,EAAEvB;MAAiB;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3CvC,OAAA;QAAAkC,QAAA,EAAI;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBvC,OAAA;QAAAkC,QAAA,EACG7B,QAAQ,CAAC0B,GAAG,CAAEC,OAAO,iBACpBhC,OAAA,CAACF,WAAW;UAEVkC,OAAO,EAAEA,OAAQ;UACjBS,gBAAgB,EAAEf,oBAAqB;UACvCgB,QAAQ,EAAEV,OAAO,CAACW,MAAO,CAAE;QAAA,GAHtBX,OAAO,CAACC,GAAG;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIjB,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA,eACL;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnC,EAAA,CAzEID,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AA2ET,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}