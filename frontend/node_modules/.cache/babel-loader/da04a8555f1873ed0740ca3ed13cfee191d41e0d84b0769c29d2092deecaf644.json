{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\speak\\\\Desktop\\\\CSMessagingApp\\\\frontend\\\\src\\\\components\\\\AgentLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AgentLogin = ({\n  onLogin\n}) => {\n  _s();\n  const [agentId, setAgentId] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = () => {\n    if (agentId) {\n      onLogin(agentId);\n      navigate('/agent-dashboard');\n    } else {\n      alert('Please enter a valid Agent ID');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Agent Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Agent ID\",\n      value: agentId,\n      onChange: e => setAgentId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(AgentLogin, \"lD+/GIO1TwD+TDjLtXXMg2tmM9o=\", false, function () {\n  return [useNavigate];\n});\n_c = AgentLogin;\nexport default AgentLogin;\nvar _c;\n$RefreshReg$(_c, \"AgentLogin\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","AgentLogin","onLogin","_s","agentId","setAgentId","navigate","handleLogin","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/speak/Desktop/CSMessagingApp/frontend/src/components/AgentLogin.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AgentLogin = ({ onLogin }) => {\r\n  const [agentId, setAgentId] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = () => {\r\n    if (agentId) {\r\n      onLogin(agentId);\r\n      navigate('/agent-dashboard');\r\n    } else {\r\n      alert('Please enter a valid Agent ID');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Agent Login</h2>\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Enter Agent ID\" \r\n        value={agentId}\r\n        onChange={(e) => setAgentId(e.target.value)} \r\n      />\r\n      <button onClick={handleLogin}>Login</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgentLogin;\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIH,OAAO,EAAE;MACXF,OAAO,CAACE,OAAO,CAAC;MAChBE,QAAQ,CAAC,kBAAkB,CAAC;IAC9B,CAAC,MAAM;MACLE,KAAK,CAAC,+BAA+B,CAAC;IACxC;EACF,CAAC;EAED,oBACER,OAAA;IAAKS,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BV,OAAA;MAAAU,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBd,OAAA;MACEe,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,gBAAgB;MAC5BC,KAAK,EAAEb,OAAQ;MACfc,QAAQ,EAAGC,CAAC,IAAKd,UAAU,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFd,OAAA;MAAQqB,OAAO,EAAEd,WAAY;MAAAG,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV,CAAC;AAACX,EAAA,CAzBIF,UAAU;EAAA,QAEGH,WAAW;AAAA;AAAAwB,EAAA,GAFxBrB,UAAU;AA2BhB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}