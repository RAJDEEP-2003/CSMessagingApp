{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\speak\\\\Desktop\\\\CSMessagingApp\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState, useEffect } from 'react';\nimport AgentLogin from './components/AgentLogin';\nimport MessageForm from './components/MessageForm';\nimport MessageItem from './components/MessageItem'; // Import the new MessageItem component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [agentId, setAgentId] = useState(null);\n\n  // Fetch messages assigned to the logged-in agent\n  useEffect(() => {\n    if (agentId) {\n      fetch(`http://localhost:5000/api/messages?agentId=${agentId}`).then(response => response.json()).then(data => setMessages(data)).catch(error => console.error('Error fetching messages:', error));\n    }\n  }, [agentId]);\n  const handleFormSubmit = formData => {\n    fetch('http://localhost:5000/api/messages', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }).then(response => response.json()).then(data => setMessages(prevMessages => [...prevMessages, data])).catch(error => console.error('Error posting message:', error));\n  };\n  const handleLogin = agentId => {\n    setAgentId(agentId); // Set the logged-in agent ID\n  };\n\n  // Handle response submission for a message\n  const handleResponseSubmit = (messageId, response) => {\n    fetch(`http://localhost:5000/api/messages/${messageId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        response,\n        agentId\n      })\n    }).then(response => response.json()).then(updatedMessage => {\n      setMessages(prevMessages => prevMessages.map(message => message._id === updatedMessage._id ? updatedMessage : message));\n    }).catch(error => console.error('Error updating message:', error));\n  };\n\n  // frontend/src/App.js\n  const [filterUrgent, setFilterUrgent] = useState(false);\n  const filteredMessages = filterUrgent ? messages.filter(message => message.urgent) : messages;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Customer Service Messaging\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: filterUrgent,\n        onChange: () => setFilterUrgent(!filterUrgent) // Toggle filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), \"Show urgent messages only\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MessageForm, {\n      onSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Messages:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredMessages.map(message => /*#__PURE__*/_jsxDEV(MessageItem, {\n        message: message,\n        onResponseSubmit: handleResponseSubmit\n      }, message._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !agentId ? /*#__PURE__*/_jsxDEV(AgentLogin, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome Agent \", agentId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MessageForm, {\n        onSubmit: handleFormSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Messages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: messages.map(message => /*#__PURE__*/_jsxDEV(MessageItem, {\n          message: message,\n          onResponseSubmit: handleResponseSubmit\n        }, message._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"5JdsXXtysJnPtuQ6vkHhJ7f2K5s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AgentLogin","MessageForm","MessageItem","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","messages","setMessages","agentId","setAgentId","fetch","then","response","json","data","catch","error","console","handleFormSubmit","formData","method","headers","body","JSON","stringify","prevMessages","handleLogin","handleResponseSubmit","messageId","updatedMessage","map","message","_id","filterUrgent","setFilterUrgent","filteredMessages","filter","urgent","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","onSubmit","onResponseSubmit","onLogin","_c","$RefreshReg$"],"sources":["C:/Users/speak/Desktop/CSMessagingApp/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport AgentLogin from './components/AgentLogin';\r\nimport MessageForm from './components/MessageForm';\r\nimport MessageItem from './components/MessageItem';  // Import the new MessageItem component\r\n\r\nconst App = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [agentId, setAgentId] = useState(null);\r\n\r\n  // Fetch messages assigned to the logged-in agent\r\n  useEffect(() => {\r\n    if (agentId) {\r\n      fetch(`http://localhost:5000/api/messages?agentId=${agentId}`)\r\n        .then((response) => response.json())\r\n        .then((data) => setMessages(data))\r\n        .catch((error) => console.error('Error fetching messages:', error));\r\n    }\r\n  }, [agentId]);\r\n\r\n  const handleFormSubmit = (formData) => {\r\n    fetch('http://localhost:5000/api/messages', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(formData),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => setMessages((prevMessages) => [...prevMessages, data]))\r\n      .catch((error) => console.error('Error posting message:', error));\r\n  };\r\n\r\n  const handleLogin = (agentId) => {\r\n    setAgentId(agentId);  // Set the logged-in agent ID\r\n  };\r\n\r\n  // Handle response submission for a message\r\n  const handleResponseSubmit = (messageId, response) => {\r\n    fetch(`http://localhost:5000/api/messages/${messageId}`, {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ response, agentId }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((updatedMessage) => {\r\n        setMessages((prevMessages) =>\r\n          prevMessages.map((message) =>\r\n            message._id === updatedMessage._id ? updatedMessage : message\r\n          )\r\n        );\r\n      })\r\n      .catch((error) => console.error('Error updating message:', error));\r\n  };\r\n\r\n// frontend/src/App.js\r\nconst [filterUrgent, setFilterUrgent] = useState(false);\r\n\r\nconst filteredMessages = filterUrgent\r\n  ? messages.filter((message) => message.urgent)\r\n  : messages;\r\n\r\nreturn (\r\n  <div>\r\n    <h1>Customer Service Messaging</h1>\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={filterUrgent}\r\n        onChange={() => setFilterUrgent(!filterUrgent)}  // Toggle filter\r\n      />\r\n      Show urgent messages only\r\n    </label>\r\n    <MessageForm onSubmit={handleFormSubmit} />\r\n    <h2>Messages:</h2>\r\n    <ul>\r\n      {filteredMessages.map((message) => (\r\n        <MessageItem\r\n          key={message._id}\r\n          message={message}\r\n          onResponseSubmit={handleResponseSubmit}\r\n        />\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      {!agentId ? (\r\n        <AgentLogin onLogin={handleLogin} />\r\n      ) : (\r\n        <>\r\n          <h1>Welcome Agent {agentId}</h1>\r\n          <MessageForm onSubmit={handleFormSubmit} />\r\n          <h2>Messages:</h2>\r\n          <ul>\r\n            {messages.map((message) => (\r\n              <MessageItem\r\n                key={message._id}\r\n                message={message}\r\n                onResponseSubmit={handleResponseSubmit}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}